{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"D:/Projetos/Reposit\\xF3rios GitHub/NLW4/moveit-next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"D:\\\\Projetos\\\\Reposit\\xF3rios GitHub\\\\NLW4\\\\moveit-next\\\\src\\\\contexts\\\\ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport challenges from '../../challenges.json';\nimport { ModalLevelUp } from '../components/ModalLevelUp';\nexport var challengeContext = /*#__PURE__*/createContext({});\nexport function ChallengersProvider(_ref) {\n  _s();\n\n  var _rest$level, _rest$currentExperien, _rest$ChallengesCompl;\n\n  var children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _useState = useState((_rest$level = rest.level) !== null && _rest$level !== void 0 ? _rest$level : 1),\n      level = _useState[0],\n      setlevel = _useState[1];\n\n  var _useState2 = useState((_rest$currentExperien = rest.currentExperience) !== null && _rest$currentExperien !== void 0 ? _rest$currentExperien : 0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState((_rest$ChallengesCompl = rest.ChallengesCompleted) !== null && _rest$ChallengesCompl !== void 0 ? _rest$ChallengesCompl : 0),\n      ChallengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var _useState5 = useState(false),\n      isLevelUpModalOpen = _useState5[0],\n      setisLevelUpModalOpen = _useState5[1];\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(function () {\n    Notification.requestPermission();\n  }, []);\n  useEffect(function () {\n    Cookies.set('level', String(level));\n    Cookies.set('currentExperience', String(currentExperience));\n    Cookies.set('ChallengesCompleted', String(ChallengesCompleted));\n  }, [level, currentExperience, ChallengesCompleted]);\n\n  function LevelUp() {\n    setlevel(level + 1);\n    setisLevelUpModalOpen;\n  }\n\n  function startNewChallenge() {\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('/notification.mp3').play();\n\n    if (Notification.permission === 'granted') {\n      new Notification('Novo Desafio ', {\n        icon: '/favicon.png',\n        body: \"Valendo \".concat(challenge.amount, \"xp!\")\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallege() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExperience + amount;\n    setChallengesCompleted(ChallengesCompleted + 1);\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      LevelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(ChallengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(challengeContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      ChallengesCompleted: ChallengesCompleted,\n      activeChallenge: activeChallenge,\n      experienceToNextLevel: experienceToNextLevel,\n      LevelUp: LevelUp,\n      startNewChallenge: startNewChallenge,\n      resetChallenge: resetChallenge,\n      completeChallege: completeChallege\n    },\n    children: [children, /*#__PURE__*/_jsxDEV(ModalLevelUp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengersProvider, \"Iov02bnx9dI7kR5gJhp3ThQ0pP8=\");\n\n_c = ChallengersProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengersProvider\");","map":{"version":3,"sources":["D:/Projetos/RepositÃ³rios GitHub/NLW4/moveit-next/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","useEffect","Cookies","challenges","ModalLevelUp","challengeContext","ChallengersProvider","children","rest","level","setlevel","currentExperience","setCurrentExperience","ChallengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","isLevelUpModalOpen","setisLevelUpModalOpen","experienceToNextLevel","Math","pow","Notification","requestPermission","set","String","LevelUp","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","play","permission","icon","body","amount","resetChallenge","completeChallege","finalExperience"],"mappings":"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","sourcesContent":["import { createContext, useState, ReactNode, useEffect } from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport challenges from '../../challenges.json';\r\nimport { ModalLevelUp } from '../components/ModalLevelUp';\r\n\r\ninterface Challenge {\r\n    type: 'body' | 'eye';\r\n    description: string;\r\n    amount: number;\r\n}\r\n\r\ninterface challengesContextData {\r\n    level: number;\r\n    currentExperience: number;\r\n    ChallengesCompleted: number;\r\n    activeChallenge: Challenge;\r\n    experienceToNextLevel: number;\r\n    LevelUp: () => void;\r\n    startNewChallenge: () => void;\r\n    resetChallenge: () => void;\r\n    completeChallege: () => void;\r\n}\r\n\r\ninterface Challengersproviderprops {\r\n    children: ReactNode;\r\n    level: number;\r\n    currentExperience: number;\r\n    ChallengesCompleted: number;\r\n}\r\n\r\nexport const challengeContext = createContext({} as challengesContextData);\r\n\r\nexport function ChallengersProvider({\r\n    children,\r\n    ...rest\r\n}: Challengersproviderprops) {\r\n    const [level, setlevel] = useState(rest.level ?? 1);\r\n    const [currentExperience, setCurrentExperience] = useState(rest.currentExperience ?? 0);\r\n    const [ChallengesCompleted, setChallengesCompleted] = useState(rest.ChallengesCompleted ?? 0);\r\n\r\n    const [activeChallenge, setActiveChallenge] = useState(null);\r\n    const [isLevelUpModalOpen, setisLevelUpModalOpen] = useState(false);\r\n\r\n    const experienceToNextLevel = Math.pow((level + 1) * 4, 2);\r\n\r\n    useEffect(() => {\r\n        Notification.requestPermission();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        Cookies.set('level', String(level));\r\n        Cookies.set('currentExperience', String(currentExperience));\r\n        Cookies.set('ChallengesCompleted', String(ChallengesCompleted));\r\n    }, [level, currentExperience, ChallengesCompleted]);\r\n\r\n    function LevelUp() {\r\n        setlevel(level + 1);\r\n        setisLevelUpModalOpen\r\n    }\r\n\r\n    function startNewChallenge() {\r\n        const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\r\n        const challenge = challenges[randomChallengeIndex];\r\n\r\n        setActiveChallenge(challenge);\r\n        \r\n        new Audio('/notification.mp3').play();\r\n\r\n        if(Notification.permission === 'granted') {\r\n            new Notification('Novo Desafio ', {\r\n                icon: '/favicon.png',\r\n                body: `Valendo ${challenge.amount}xp!`,\r\n            })\r\n        }\r\n    }\r\n\r\n    function resetChallenge() {\r\n        setActiveChallenge(null);\r\n    }\r\n\r\n    function completeChallege() {\r\n        if(!activeChallenge) {\r\n            return;\r\n        }\r\n\r\n        const { amount } = activeChallenge;\r\n\r\n        let finalExperience = currentExperience + amount;\r\n\r\n        setChallengesCompleted(ChallengesCompleted + 1);\r\n\r\n        if(finalExperience >= experienceToNextLevel) {\r\n            finalExperience = finalExperience - experienceToNextLevel;\r\n            LevelUp();\r\n        }\r\n\r\n        setCurrentExperience(finalExperience);\r\n        setActiveChallenge(null);\r\n        setChallengesCompleted(ChallengesCompleted + 1);\r\n    }\r\n\r\n    return (\r\n        <challengeContext.Provider \r\n        value={{\r\n            level, \r\n            currentExperience, \r\n            ChallengesCompleted,\r\n            activeChallenge,\r\n            experienceToNextLevel,\r\n            LevelUp,\r\n            startNewChallenge,\r\n            resetChallenge,\r\n            completeChallege,\r\n            }}>\r\n            {children}\r\n            <ModalLevelUp />\r\n        </challengeContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}