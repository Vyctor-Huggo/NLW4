{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Projetos\\\\Reposit\\xF3rios GitHub\\\\NLW4\\\\moveit-next\\\\src\\\\contexts\\\\CountdownContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { challengeContext } from \"./ChallengesContext\";\nvar countdownTimeout;\nexport var CountdownContext = /*#__PURE__*/createContext({});\nexport function CountdownProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useContext = useContext(challengeContext),\n      startNewChallenge = _useContext.startNewChallenge;\n\n  var _useState = useState(0.025 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isActive = _useState2[0],\n      setisActive = _useState2[1];\n\n  var _useState3 = useState(false),\n      hasFinished = _useState3[0],\n      sethasFinished = _useState3[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n\n  function startCountdown() {\n    setisActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setisActive(false);\n    sethasFinished(false);\n    setTime(0.025 * 60);\n  }\n\n  useEffect(function () {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time === 0) {\n      sethasFinished(true);\n      setisActive(false);\n      startNewChallenge();\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(CountdownContext.Provider, {\n    value: {\n      isActive: isActive,\n      hasFinished: hasFinished,\n      minutes: minutes,\n      seconds: seconds,\n      startCountdown: startCountdown,\n      resetCountdown: resetCountdown\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CountdownProvider, \"9r/b6OqRs+Qm8FMpFupPJSAgO4s=\");\n\n_c = CountdownProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountdownProvider\");","map":{"version":3,"sources":["D:/Projetos/RepositÃ³rios GitHub/NLW4/moveit-next/src/contexts/CountdownContext.tsx"],"names":["createContext","useContext","useEffect","useState","challengeContext","countdownTimeout","CountdownContext","CountdownProvider","children","startNewChallenge","time","setTime","isActive","setisActive","hasFinished","sethasFinished","minutes","Math","floor","seconds","startCountdown","resetCountdown","clearTimeout","setTimeout"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAmCC,UAAnC,EAA+CC,SAA/C,EAA0DC,QAA1D,QAA0E,OAA1E;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AAeA,IAAIC,gBAAJ;AAEA,OAAO,IAAMC,gBAAgB,gBAAGN,aAAa,CAAC,EAAD,CAAtC;AAEP,OAAO,SAASO,iBAAT,OAA+D;AAAA;;AAAA,MAAnCC,QAAmC,QAAnCA,QAAmC;;AAAA,oBACtCP,UAAU,CAACG,gBAAD,CAD4B;AAAA,MAC3DK,iBAD2D,eAC3DA,iBAD2D;;AAAA,kBAG1CN,QAAQ,CAAC,QAAQ,EAAT,CAHkC;AAAA,MAG3DO,IAH2D;AAAA,MAGrDC,OAHqD;;AAAA,mBAIlCR,QAAQ,CAAC,KAAD,CAJ0B;AAAA,MAI3DS,QAJ2D;AAAA,MAIjDC,WAJiD;;AAAA,mBAK5BV,QAAQ,CAAC,KAAD,CALoB;AAAA,MAK3DW,WAL2D;AAAA,MAK9CC,cAL8C;;AAOlE,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWR,IAAI,GAAG,EAAlB,CAAhB;AACA,MAAMS,OAAO,GAAGT,IAAI,GAAG,EAAvB;;AAEA,WAASU,cAAT,GAA0B;AACtBP,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AACD,WAASQ,cAAT,GAA0B;AACtBC,IAAAA,YAAY,CAACjB,gBAAD,CAAZ;AACAQ,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAJ,IAAAA,OAAO,CAAC,QAAQ,EAAT,CAAP;AAEH;;AAEDT,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAGU,QAAQ,IAAIF,IAAI,GAAG,CAAtB,EAAwB;AACpBL,MAAAA,gBAAgB,GAAGkB,UAAU,CAAC,YAAM;AAChCZ,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACH,OAF4B,EAE1B,IAF0B,CAA7B;AAGH,KAJD,MAIO,IAAIE,QAAQ,IAAIF,IAAI,KAAK,CAAzB,EAA4B;AAC/BK,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAF,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAJ,MAAAA,iBAAiB;AACpB;AACJ,GAVQ,EAUN,CAACG,QAAD,EAAWF,IAAX,CAVM,CAAT;AAaA,sBACI,QAAC,gBAAD,CAAkB,QAAlB;AACA,IAAA,KAAK,EAAE;AACHE,MAAAA,QAAQ,EAARA,QADG;AAEHE,MAAAA,WAAW,EAAXA,WAFG;AAGHE,MAAAA,OAAO,EAAPA,OAHG;AAIHG,MAAAA,OAAO,EAAPA,OAJG;AAKHC,MAAAA,cAAc,EAAdA,cALG;AAMHC,MAAAA,cAAc,EAAdA;AANG,KADP;AAAA,cAUKb;AAVL;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GAhDeD,iB;;KAAAA,iB","sourcesContent":["import { createContext, ReactNode, useContext, useEffect, useState } from \"react\";\r\nimport { challengeContext } from \"./ChallengesContext\";\r\n\r\ninterface CountdownContextprops {\r\n    minutes: number;\r\n    seconds: number;\r\n    isActive: boolean;\r\n    hasFinished: boolean;\r\n    startCountdown: () => void;\r\n    resetCountdown: () => void;\r\n}\r\n\r\ninterface CountdownProviderprops {\r\n    children: ReactNode;\r\n}\r\n\r\nlet countdownTimeout: NodeJS.Timeout;\r\n\r\nexport const CountdownContext = createContext({} as CountdownContextprops);\r\n\r\nexport function CountdownProvider({children}: CountdownProviderprops) {\r\n    const {startNewChallenge} = useContext(challengeContext);\r\n\r\n    const [time, setTime] = useState(0.025 * 60);\r\n    const [isActive, setisActive] = useState(false);\r\n    const [hasFinished, sethasFinished] = useState(false);\r\n\r\n    const minutes = Math.floor(time / 60);\r\n    const seconds = time % 60;\r\n\r\n    function startCountdown() {\r\n        setisActive(true);\r\n    }\r\n    function resetCountdown() {\r\n        clearTimeout(countdownTimeout);\r\n        setisActive(false);\r\n        sethasFinished(false);\r\n        setTime(0.025 * 60);\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(isActive && time > 0){\r\n            countdownTimeout = setTimeout(() => {\r\n                setTime(time - 1);\r\n            }, 1000)\r\n        } else if (isActive && time === 0) {\r\n            sethasFinished(true);\r\n            setisActive(false);\r\n            startNewChallenge();\r\n        }\r\n    }, [isActive, time])\r\n\r\n\r\n    return (\r\n        <CountdownContext.Provider \r\n        value={{\r\n            isActive,\r\n            hasFinished,\r\n            minutes,\r\n            seconds,\r\n            startCountdown,\r\n            resetCountdown,\r\n            }}\r\n            >\r\n            {children}\r\n        </CountdownContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}